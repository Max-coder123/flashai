[{"id": "76fa367f-68bc-48e4-b642-36c56e9c38d7", "input": "Lecture 1\r\n\r\nOverfitting: fitting too closely to the data, and not giving a more general result. It is undesirable in ML\r\n\r\nSpurious Correlation: when data appears to be related, but isn\u2019t\r\nie: a cow is always in a green background, but when it\u2019s in a different background, AI assumes it\u2019s not a cow.\r\n\r\nTrain/Validation/Test Split:\r\npurpose: prevent overfitting, generalizes well to new unseen data\r\ntraining set: used to train the model; model learns relationship between features (input variable) and target (output variable). usually 60-80% of data.\r\nvalidation set: used to select the best performing model in the training process. Checks how well model is performing, smaller portion of data (10-20% of data)\r\ntest set: provides final evaluation, only used once. (10-20% of data)\r\nnote: never train on the test set, gauge performance on validation set\r\n\r\nOverfitting vs Underfitting:\r\noverfitting: trained too well, causing it to perform poorly on new data\r\nunderfitting: cannot capture pattern of data, performs poorly on all data\r\nhow to tell overfitting: low train loss, high validation loss\r\n\r\n", "flashcards": "{\n    \"data\": [\n        {\n            \"question\": \"What is overfitting in machine learning?\",\n            \"answer\": \"Overfitting is fitting too closely to the data, resulting in a model that does not generalize well.\",\n            \"explanation\": \"Overfitting occurs when a model learns the noise in the training data instead of the actual signal, making it perform poorly on new, unseen data.\"\n        },\n        {\n            \"question\": \"What is spurious correlation?\",\n            \"answer\": \"Spurious correlation is when data appears to be related, but there is no actual relationship.\",\n            \"explanation\": \"An example is a cow always being in a green background; if the AI sees a cow in a different background, it may incorrectly assume it's not a cow.\"\n        },\n        {\n            \"question\": \"What is the purpose of the train/validation/test split?\",\n            \"answer\": \"The purpose is to prevent overfitting and ensure the model generalizes well to new, unseen data.\",\n            \"explanation\": \"The training set is used to train the model, the validation set helps select the best model during training, and the test set is used for final evaluation.\"\n        },\n        {\n            \"question\": \"What is the typical proportion of data used for the training set?\",\n            \"answer\": \"Usually 60-80% of the data is used for the training set.\",\n            \"explanation\": \"This allows the model to learn the relationships between features and target effectively.\"\n        },\n        {\n            \"question\": \"How does underfitting differ from overfitting?\",\n            \"answer\": \"Underfitting is when a model cannot capture the patterns in the data and performs poorly on all data.\",\n            \"explanation\": \"In contrast, overfitting occurs when a model is too complex and learns the training data too well, failing to perform on new data.\"\n        },\n        {\n            \"question\": \"How can you tell if a model is overfitting?\",\n            \"answer\": \"You can tell by observing low training loss and high validation loss.\",\n            \"explanation\": \"This indicates that the model performs well on the training data but poorly on new, unseen data, signaling overfitting.\"\n        }\n    ]\n}"}, {"id": "75eb4a0a-9a8a-44b9-bc2d-33139054d8af", "input": "<a href=\"/\" onclick=\"regenerateFlashcards('{{ flashcard_set.input }}')\">Back to Generator</a>\r\n\r\n<script>\r\n    function regenerateFlashcards(inputText) {\r\n        localStorage.setItem('flashcardInput', inputText);  // Store input text\r\n        window.location.href = '/';  // Redirect to home page\r\n        return false;  // Prevent default link behavior\r\n    }\r\n</script>\r\n", "flashcards": "{\n    \"data\": [\n        {\n            \"question\": \"What does the 'Back to Generator' link do?\",\n            \"answer\": \"It calls the function 'regenerateFlashcards' with the input from the flashcard set.\",\n            \"explanation\": \"When clicked, the link triggers the JavaScript function 'regenerateFlashcards' and passes the input text as an argument.\"\n        },\n        {\n            \"question\": \"What is stored in local storage when 'regenerateFlashcards' is called?\",\n            \"answer\": \"The input text from the flashcard set is stored in local storage.\",\n            \"explanation\": \"The function uses 'localStorage.setItem' to save the input text under the key 'flashcardInput'.\"\n        },\n        {\n            \"question\": \"What happens after the input text is stored in local storage?\",\n            \"answer\": \"The user is redirected to the home page.\",\n            \"explanation\": \"The line 'window.location.href = '/' ' changes the current page to the home page after storing the input.\"\n        },\n        {\n            \"question\": \"What does 'return false' do in the 'regenerateFlashcards' function?\",\n            \"answer\": \"It prevents the default behavior of the link.\",\n            \"explanation\": \"Returning false in an event handler stops the link from executing its default action, which is navigating to the href.\"\n        }\n    ]\n}"}]